<?php

namespace App\Filament\Resources\ResearchResource\Pages;

use App\Filament\Resources\ResearchResource;
use App\Models\Research;
use Filament\Actions;
use Filament\Resources\Pages\EditRecord;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

class EditResearch extends EditRecord
{
    protected static string $resource = ResearchResource::class;
    protected static ?string $title = null;

    public function __construct()
    {
        self::$title = self::getMyTitle();
    }


    public static function getMyTitle(): string
    {
        if (auth()->user()->role_id == 4)
        {
            return "evaluating research";
        }
            return "Edit Research";
    }

   protected function handleRecordUpdate(Model $record, array $data): Model
   {
       if($data['research']["files"]){

           //delete old research files
           foreach ($record->files as $oldFile) {
               Storage::disk('public')->delete($oldFile->path);
               $oldFile->delete();
           }

           foreach ($data['research']["files"]  as $filePath) {

               $fileName = basename($filePath);
               $uniqueFileName = Str::uuid()->toString() . '.' . pathinfo($fileName, PATHINFO_EXTENSION);

               // Define the final storage location
               $finalStoragePath = 'research/files/' . $uniqueFileName;

               // Move the file from the temporary location to the final location
               Storage::disk('public')->move($filePath, $finalStoragePath);


               $record->files()->create([
                   'original_name' => $fileName, // Original file name
                   'file_name' => $uniqueFileName, // Unique file name
                   'path' => $finalStoragePath, // Storage path of the file
                   'mime_type' => Storage::disk('public')->mimeType($finalStoragePath), // Get MIME type of the file
               ]);

           }
       }
       $record->update($data);
       return $record; // TODO: Change the autogenerated stub
   }
}
