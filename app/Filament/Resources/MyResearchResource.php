<?php

namespace App\Filament\Resources;

use App\Filament\Resources\MyResearchResource\Pages;
use App\Filament\Resources\MyResearchResource\RelationManagers;
use App\Models\MyResearch;
use App\Models\Research;
use Filament\Forms;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class MyResearchResource extends Resource
{
    protected static ?string $model = Research::class;

    protected static ?string $label="my research";
    public static function canCreate(): bool
    {
        return false; // TODO: Change the autogenerated stub
    }
    public static function canAccess(): bool
    {
        return auth()->user()->role_id==2; // TODO: Change the autogenerated stub
    }

    public static function canDelete(Model $record): bool
{
    return false; // TODO: Change the autogenerated stub
}

    protected static ?string $navigationIcon = 'heroicon-o-document-text';
    public static function getEloquentQuery(): Builder
    {
        return parent::getEloquentQuery()->where("student_id",auth()->id()); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                TextInput::make("title")
                    ->string()
                    ->disabledOn("edit")
                    ->required(),
                TextInput::make("description")
                    ->string()
                    ->disabledOn("edit")
                    ->required(),
                TextInput::make("abstract")
                    ->string()
                ->required(),
                FileUpload::make('research.files')
                    ->label('Research Documentation')
                    ->multiple()
                    ->preserveFilenames()
                    ->openable()
                    ->downloadable()
                    ->hiddenOn("view")
                    ->required()
                    ->disk('public'),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('id')
                    ->sortable(),
                TextColumn::make('title')
                    ->searchable()
                    ->sortable(),
                TextColumn::make('status')
                    ->alignCenter()
                    ->badge()
                    ->color(fn(string $state): string => match ($state) {
                        'progress' => 'info',
                        'under_review' => 'gray',
                        'under_evaluate' => 'warning',
                        'publish' => 'success',
                        'reject' => 'danger',
                    })
                    ->sortable(),
                TextColumn::make('marks')
                    ->searchable()
                    ->sortable(),
                TextColumn::make('student.name')
                    ->searchable()
                    ->sortable(),
                TextColumn::make('subject.name')
                    ->searchable()
                    ->sortable(),
                TextColumn::make('college.name')
                    ->searchable()
                    ->sortable(),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make()
                ->label("Upload")
                    ->disabled(fn(Research $record) => $record->status != "progress"),
                ])
            ->bulkActions([
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListMyResearch::route('/'),
            'create' => Pages\CreateMyResearch::route('/create'),
            'edit' => Pages\EditMyResearch::route('/{record}/edit'),
        ];
    }
}
